{"version":3,"sources":["app/reducers/index.js","app/reducers/clientesReducer.js","app/actions/types.js","app/store.js","app/actions/index.js","app/components/clientes/listagem/ordenacao.js","app/components/clientes/listagem/pesquisa.js","app/components/clientes/formulario/index.js","app/components/clientes/listagem/cliente.js","app/components/clientes/listagem/lista.js","app/components/clientes/listagem/index.js","app/components/aplicacao.js","app/index.js","index.js"],"names":["rootReducer","combineReducers","clientes","state","ordenacao","action","type","data","concat","cliente","map","_cliente","id","filter","pesquisa","createStore","reducers","getDate","Date","getTime","prepararClinte","Math","floor","random","criadoEm","atualizadoEm","nome","telefone","email","cpf","getClientes","addCliente","updateCliente","removeCliente","setClienteParaAlterar","setOrdenacao","ev","target","value","setPesquisa","Ordenacao","valor","this","props","className","onChange","React","Component","connect","actions","Pesquisa","placeholder","Input","label","erro","DEFAULT_STATE","form","erros","mostrarForm","Formulario","setState","validar","forEach","item","Object","keys","length","field","handleSubmit","nextProps","onClick","renderFormulario","renderBotao","Cliente","iniciouExclusao","excluirCliente","alterarCliente","ListaClientes","a","b","localeCompare","join","includes","excluir","sort","index","key","Opcoes","Listagem","Aplicacao","App","store","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f5faf11.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\nimport clientesReducer from './clientesReducer';\r\n\r\nconst rootReducer = combineReducers ({\r\n    clientes: clientesReducer\r\n})\r\n\r\nexport default rootReducer;","import {\r\n    GET_CLIENTES,\r\n    ADD_CLIENTE,\r\n    UPDATE_CLIENTE,\r\n    REMOVE_CLIENTE,\r\n    SET_CLIENTE,\r\n    SET_ORDENACAO,\r\n    SET_PESQUISA\r\n} from '../actions/types';\r\n\r\nexport default (state = { ordenacao: \"a-z\" }, action) => {\r\n    switch(action.type) {\r\n        case GET_CLIENTES:\r\n            return {\r\n                ...state,\r\n                clientes: action.data\r\n            };\r\n        case ADD_CLIENTE:\r\n            return {\r\n                ...state,\r\n                clientes: state.clientes.concat([action.cliente])\r\n            };\r\n        case UPDATE_CLIENTE:\r\n            return {\r\n                ...state,\r\n                cliente: null, \r\n                clientes: state.clientes.map((_cliente) => (_cliente.id === action.cliente.id) ? action.cliente : _cliente)\r\n            };\r\n        case REMOVE_CLIENTE:\r\n            return {\r\n                ...state,\r\n                clientes: state.clientes.filter((_cliente) => _cliente.id !== action.id )\r\n            };\r\n        case SET_CLIENTE:\r\n            return {\r\n                ...state,\r\n                cliente: action.cliente\r\n            }\r\n        case SET_ORDENACAO:\r\n            return {\r\n                ...state,\r\n                ordenacao: action.ordenacao\r\n            }\r\n        case SET_PESQUISA:\r\n            return {\r\n                ...state,\r\n                pesquisa: action.pesquisa\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","export const ADICIONAR_UM = 'ADICIONAR_UM',\r\n             GET_CLIENTES = 'GET_CLIENTES',\r\n             ADD_CLIENTE = 'ADD_CLIENTE',\r\n             UPDATE_CLIENTE = 'UPDATE_CLIENTE',\r\n             REMOVE_CLIENTE = 'REMOVE_CLIENTE',\r\n             SET_CLIENTE = 'SET_CLIENTE',\r\n             SET_ORDENACAO = 'SET_ORDENACAO',\r\n             SET_PESQUISA = 'SET_PESQUISA';","import { createStore } from 'redux';\r\nimport reducers from './reducers/index';\r\nexport default createStore(reducers);","import {\r\n    GET_CLIENTES,\r\n    ADD_CLIENTE,\r\n    UPDATE_CLIENTE,\r\n    REMOVE_CLIENTE,\r\n    SET_CLIENTE,\r\n    SET_ORDENACAO,\r\n    SET_PESQUISA\r\n} from './types';\r\n\r\nconst getDate = () => new Date().getTime();\r\n\r\nconst generateId = () => Math.floor(Math.random() * 100000 + 100000); // gerar numero aleatorio\r\n\r\nconst prepararClinte = (cliente) => {\r\n    const id = generateId();\r\n    const criadoEm = getDate();\r\n    const atualizadoEm = getDate();\r\n    return { ...cliente, id, criadoEm, atualizadoEm };\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: 1,\r\n        nome: \"Jonata\",\r\n        telefone: \"99999-9999\",\r\n        email: \"jonata@gmail.com\",\r\n        cpf: \"111.222.333-45\",\r\n        criadoEm: getDate(),\r\n        atualizadoEm: getDate()\r\n    }\r\n]; \r\n\r\nexport const getClientes = () => ({ type: GET_CLIENTES, data });\r\n\r\nexport const addCliente = (cliente) => ({ type: ADD_CLIENTE, cliente: prepararClinte(cliente) });\r\n\r\nexport const updateCliente = (id, cliente) => ({ type: UPDATE_CLIENTE, cliente: { id, ...cliente, atualizadoEm: getDate()} });\r\n\r\nexport const removeCliente = (id) => ({ type: REMOVE_CLIENTE, id });\r\n\r\n// action de apoio\r\n\r\nexport const setClienteParaAlterar = (cliente) => ({ type: SET_CLIENTE, cliente })\r\n\r\nexport const setOrdenacao = (ev) => ({ type: SET_ORDENACAO, ordenacao: ev.target.value });\r\n\r\nexport const setPesquisa = (ev) => ({ type: SET_PESQUISA, pesquisa: ev.target.value });","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport  * as actions from '../../../actions';\r\n\r\nclass Ordenacao extends React.Component {\r\n\r\n    render() {\r\n        const { ordenacao: valor } = this.props\r\n        return (\r\n            <div className=\"Ordenacao\">\r\n                <label>Ordenar por</label>\r\n                <select value={ valor || \"a-z\" } onChange={ this.props.setOrdenacao }>\r\n                    <option value=\"a-z\"> Alfabética de A-Z </option>\r\n                    <option value=\"z-a\"> Alfabética de Z-A </option>\r\n                    <option value=\"criacao\"> Data de criação </option>\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ordenacao: state.clientes.ordenacao\r\n})\r\n\r\nexport default connect (mapStateToProps, actions) (Ordenacao);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../actions';\r\n\r\nclass Pesquisa extends React.Component {\r\n    render() {\r\n        const { pesquisa: valor, setPesquisa: onChange } = this.props\r\n        return (\r\n            <div className=\"Pesquisa\">\r\n                <input value = { valor || \"\"} onChange = {onChange} placeholder = {\" Pesquise aqui ... \"}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    pesquisa: state.clientes.pesquisa\r\n})\r\n\r\nexport default connect (mapStateToProps, actions) ( Pesquisa)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../actions';\r\n\r\nconst Input = (props) => (\r\n    <div className=\"Input\">\r\n        { props.label &&<label>{props.label}</label> }\r\n        <input value = { props.value } onChange = { props.onChange } placeholder = { props.placeholder } type = { props.type || \"text\"} />\r\n        { props.erro && <small>{props.erro}</small> }\r\n    </div>\r\n)\r\n\r\nconst DEFAULT_STATE = {\r\n    form: {\r\n        nome: \"\",\r\n        email: \"\",\r\n        telefone: \"\",\r\n        cpf: \"\"\r\n    },\r\n    erros: {},\r\n    mostrarForm: false\r\n};\r\n\r\nclass Formulario extends React.Component {\r\n\r\n    state = DEFAULT_STATE \r\n\r\n    componentWillUpdate(nextProps) {\r\n        if( !this.props.cliente && nextProps.cliente ) {\r\n            this.setState({\r\n                form: nextProps.cliente,\r\n                erros: {},\r\n                mostrarForm: true\r\n            })\r\n        }\r\n        if( this.props.cliente && !nextProps.cliente ) {\r\n            this.setState(DEFAULT_STATE)\r\n        }\r\n    }\r\n\r\n    mostrarForm = () => {\r\n        this.setState({ mostrarForm: !this.state.mostrarForm })\r\n    }\r\n\r\n    validar = () => {\r\n        const { form } = this.state;\r\n        const erros = {};\r\n        [ \"nome\", \"telefone\", \"email\", \"cpf\" ].forEach((item) => {\r\n            if( !form[item] ) erros[item] = \"Digite o \" + item; // se procurar e nao existir o nome .., irá retornar o erro\r\n        })\r\n\r\n        this.setState({ erros })\r\n        return Object.keys(erros).length === 0;\r\n    }\r\n\r\n    onChange = (field, ev) => {\r\n        const  { form } = this.state;\r\n        form[ field ] = ev.target.value;\r\n        this.setState({ form }, () => {\r\n            this.validar();\r\n        })\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if( !this.validar() ) return null; // se existir erro nao será possivel inviar o form\r\n        const { form } = this.state;\r\n        const { cliente } = this.props;\r\n        \r\n        if( cliente ) this.props.updateCliente( cliente.id, form )\r\n        else this.props.addCliente(form);\r\n        \r\n        this.setState(DEFAULT_STATE)\r\n    }\r\n\r\n    renderFormulario() {\r\n        const { form, erros } = this.state\r\n        return (\r\n            <div className=\"Formulario\">\r\n                <div>\r\n                    <Input value = { form.nome } onChange = {(ev) => this.onChange('nome', ev) } label = { \"Nome\" } erro = { erros.nome } />\r\n\r\n                    <Input value = { form.telefone } onChange = {(ev) => this.onChange('telefone', ev) } label = { \"Telefone\" } erro = { erros.telefone } />\r\n                    \r\n                    <Input value = { form.email } onChange = {(ev) => this.onChange('email', ev) } label = { \"Email\" } erro = { erros.email } />\r\n                    \r\n                    <Input value = { form.cpf } onChange = {(ev) => this.onChange('cpf', ev) } label = { \"CPF\" } type = { \"email\" } erro = { erros.cpf } />\r\n\r\n                    <div>\r\n                        <button onClick = { this.handleSubmit } className=\"botao botao-verde\" > Salvar </button>\r\n                        <button onClick = { this.mostrarForm } className=\"botao\" > Cancelar </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderBotao() {\r\n        return(\r\n            <div className=\"Formulario\">\r\n                <button onClick = { this.mostrarForm } className=\"botao botao-azul\" > + ADICIONAR CLIENTE </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return this.state.mostrarForm ? this.renderFormulario() : this.renderBotao();\r\n    } \r\n\r\n}\r\n\r\nconst mapStateToProps  = state => ({\r\n    cliente: state.clientes.cliente\r\n})\r\n\r\nexport default connect(mapStateToProps, actions) (Formulario)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../actions';\r\n\r\nclass Cliente extends React.Component {\r\n    state = {\r\n        iniciouExclusao: false\r\n    }\r\n\r\n    excluirCliente = () => { // função para excluir cliente\r\n        const { iniciouExclusao } = this.state;\r\n        if( !iniciouExclusao ) return this.setState({ iniciouExclusao: true }); // se iniciouExclusao for igual a falso, vai mudar o estado para verdadeiro\r\n        this.props.removeCliente(this.props.cliente.id);\r\n    }\r\n\r\n    alterarCliente = () => {\r\n        this.props.setClienteParaAlterar(this.props.cliente) // setClienteParaAlterar sera adicionada nas Actions, trazendo o cliente junto\r\n    }\r\n    \r\n    render(){\r\n        const { cliente } = this.props\r\n        const { iniciouExclusao } = this.state;\r\n        return (\r\n            <tr>\r\n                <td> { cliente.nome } </td>\r\n                <td> { cliente.telefone } </td>\r\n                <td> { cliente.email } </td>\r\n                <td> { cliente.cpf } </td> \r\n                <td onClick = { this.alterarCliente } className=\"botao botao-laranja\"> { \"Alterar\" } </td>\r\n                <td onClick = { this.excluirCliente } className=\"botao botao-vermelho\" > { iniciouExclusao ? \"Certeza ?\" : \"Excluir\" } </td>   \r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, actions) (Cliente)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../actions'; \r\nimport Cliente from './cliente';\r\n\r\n\r\nclass ListaClientes extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getClientes();\r\n    }\r\n\r\n    ordenacao = ( a, b ) => {\r\n        const { ordenacao } = this.props\r\n        if (ordenacao === 'a-z') return a.nome.localeCompare(b.nome)\r\n        else if (ordenacao === 'z-a') return -1 * a.nome.localeCompare(b.nome)\r\n        else if (ordenacao === 'criacao') return new Date(a.criadoEm) - new Date(b.criadoEm)\r\n    }\r\n\r\n    pesquisa = ({ nome, telefone, email, cpf }) => {\r\n        const { pesquisa } = this.props\r\n        if (!pesquisa) return true;\r\n        const item = [nome, telefone, email, cpf].join( ' ; ' );\r\n        return item.includes(pesquisa)\r\n    }\r\n\r\n    excluir = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        const  { clientes: data } = this.props\r\n        return(\r\n            <div className=\"ListaClientes\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nome</th>\r\n                            <th>Telefone</th>\r\n                            <th>Email</th>\r\n                            <th>CPF</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            (data || []).filter(this.pesquisa).sort(this.ordenacao).map((cliente, index) => (\r\n                                <Cliente cliente={cliente} key={cliente.id} />\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    clientes: state.clientes.clientes,\r\n    ordenacao: state.clientes.ordenacao,\r\n    pesquisa: state.clientes.pesquisa\r\n})\r\n\r\nexport default connect(mapStateToProps, actions) (ListaClientes)\r\n","import React from 'react';\r\n\r\nimport Ordenacao from './ordenacao';\r\nimport Pesquisa from './pesquisa';\r\nimport Formulario from '../formulario';\r\nimport ListaCliente from './lista';\r\n\r\nconst Opcoes = () => (\r\n    <div className=\"Opcoes flex horizontal\">\r\n        <div>\r\n            <Pesquisa />\r\n        </div>\r\n\r\n        <div>\r\n            <Ordenacao />\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default class Listagem extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Listagem\">\r\n                <div className=\"Header\">\r\n                    <h2>Lista de Clientes</h2>\r\n                </div>\r\n                <hr />\r\n                <Formulario />\r\n                <br />\r\n                <Opcoes />\r\n                <br />\r\n                <hr />\r\n                <ListaCliente />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Listagem from './clientes/listagem';\r\n\r\nclass Aplicacao extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Aplicacao\">\r\n                <Listagem />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Aplicacao;","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from './store';\r\n\r\nimport Aplicacao from './components/aplicacao';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store = {store} >\r\n                <div className=\"App\">\r\n                    <Aplicacao />\r\n                </div>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './app';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}